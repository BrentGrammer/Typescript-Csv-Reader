import fs from 'fs';
import { dateStringToDate } from './utils';
import { MatchResult } from './MatchResult';

// these are the types of data in order in a csv row:
type MatchData = [Date, string, string, number, number, MatchResult, string];

// this produces a 2-D array - each row will be an array of the words inside an outer array
export class CsvFileReader {
  // MatchData is an array with types specified in the tuple defined above
  data: MatchData[] = [];

  constructor(public filename: string) {}

  read(): void {
    this.data = fs
      .readFileSync(this.filename, {
        // this tells the method what type of data content to find in the file (text encoded with utf-8)
        // If no encoding is provided, then a Buffer containing the raw file content will be returned
        encoding: 'utf-8'
      })
      .split('\n')
      .map((row: string): string[] => row.split(','))
      .map(
        (row: string[]): MatchData => {
          return [
            dateStringToDate(row[0]),
            row[1],
            row[2],
            parseInt(row[3]),
            parseInt(row[4]),
            row[5] as MatchResult, // override inference of string to enum 'H', 'A', 'D'
            row[6]
          ];
        }
      );
  }
}
